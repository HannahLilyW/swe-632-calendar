{"version":3,"sources":["./src/app/shared/notes-sidebar/notes-sidebar.component.ts","./src/app/shared/notes-sidebar/notes-sidebar.component.html","./src/app/shared/modal/modal.component.ts","./src/app/shared/modal/modal.component.html","./src/app/activity-log/activity-log.component.ts","./src/app/activity-log/activity-log.component.html","./src/app/services/toast.service.ts","./src/app/month-grid/month-title/month-title.component.ts","./src/app/month-grid/month-title/month-title.component.html","./src/app/models/task.ts","./src/app/models/monthNames.ts","./src/app/month-grid/day/day.component.ts","./src/app/month-grid/day/day.component.html","./src/app/event-modal/event-modal.component.ts","./src/app/event-modal/event-modal.component.html","./src/environments/environment.ts","./src/app/month-grid/month-grid.component.ts","./src/app/month-grid/month-grid.component.html","./src/app/month-grid/day/day-detail/day-detail.component.ts","./src/app/month-grid/day/day-detail/day-detail.component.html","./src/app/models/note.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/notes/notes.component.ts","./src/app/notes/notes.component.html","./src/app/shared/toast/toast.component.ts","./src/app/shared/toast/toast.component.html","./src/app/app.module.ts","./src/app/models/event.ts","./src/app/note-modal/note-modal.component.ts","./src/app/note-modal/note-modal.component.html","./src/app/services/event.service.ts","./src/app/task-modal/task-modal.component.ts","./src/app/task-modal/task-modal.component.html","./src/app/models/toast.ts","./src/app/shared/activity-log-sidebar/activity-log-sidebar.component.ts","./src/app/shared/activity-log-sidebar/activity-log-sidebar.component.html","./src/app/pipes/newline.pipe.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notes-sidebar',\r\n  templateUrl: './notes-sidebar.component.html',\r\n  styleUrls: ['./notes-sidebar.component.scss']\r\n})\r\nexport class NotesSidebarComponent implements OnInit {\r\n\r\n  notesShow: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleNotes = () => {\r\n    this.notesShow = !this.notesShow;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"modal-parent\" *ngIf=\"notesShow\" (click)=\"toggleNotes()\">\r\n        <div class=\"notes\" (click)=\"$event.stopPropagation()\">\r\n            <div class=\"hide-button\" title=\"Hide Notes\" (click)=\"toggleNotes()\">\r\n                <svg class=\"icon circle-right\" viewBox=\"0 0 32 32\">\r\n                    <path d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13z\"></path>\r\n                    <path d=\"M11.086 22.086l2.829 2.829 8.914-8.914-8.914-8.914-2.828 2.828 6.086 6.086z\"></path>\r\n                </svg>\r\n            </div>\r\n            <ng-content></ng-content>\r\n        </div>\r\n    </div>\r\n    <div class=\"notes-placeholder\" *ngIf=\"!notesShow\" (click)=\"toggleNotes()\">\r\n        <div class=\"show-button\" title=\"Show Notes\" (click)=\"toggleNotes()\">\r\n            <svg class=\"icon circle-left\" viewBox=\"0 0 32 32\">\r\n                <path d=\"M16 32c8.837 0 16-7.163 16-16s-7.163-16-16-16-16 7.163-16 16 7.163 16 16 16zM16 3c7.18 0 13 5.82 13 13s-5.82 13-13 13-13-5.82-13-13 5.82-13 13-13z\"></path>\r\n                <path d=\"M20.914 9.914l-2.829-2.829-8.914 8.914 8.914 8.914 2.828-2.828-6.086-6.086z\"></path>\r\n            </svg>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n\n  @Output() closeClick = new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  close = (event) => {\n    event.stopPropagation();\n    this.closeClick.emit();\n  }\n\n}\n","<div class=\"modal-container\">\r\n    <div class=\"close\" (click)=\"close($event)\">\r\n        <svg class=\"icon icon-cross\" viewBox=\"0 0 32 32\">\r\n            <path d=\"M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\">\r\n            </path>\r\n        </svg>\r\n    </div>\r\n    <ng-content></ng-content>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-activity-log',\r\n  templateUrl: './activity-log.component.html',\r\n  styleUrls: ['./activity-log.component.scss']\r\n})\r\nexport class ActivityLogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>activity-log works!</p>\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Toast, ToastType } from 'src/app/models/toast';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  private toasts: Toast[];\r\n  public toastsSubject: BehaviorSubject<Toast[]> = new BehaviorSubject([]);\r\n\r\n  constructor() {\r\n    this.toasts = [];\r\n    this.toastsSubject.next(this.toasts);\r\n  }\r\n\r\n  addToast = (type: ToastType, text: string, timeout?: number) => {\r\n    const toast: Toast = new Toast(type, text);\r\n    this.toasts.push(toast);\r\n    this.toastsSubject.next(this.toasts);\r\n    if (timeout) {\r\n      setTimeout(() => {\r\n        this.removeToast(toast);\r\n      }, timeout * 1000);\r\n    }\r\n  }\r\n\r\n  removeToast = (toast: Toast) => {\r\n    const index = this.toasts.findIndex(t => t.uuid === toast.uuid);\r\n    this.toasts.splice(index, 1);\r\n    this.toastsSubject.next(this.toasts);\r\n  }\r\n}\r\n","import { Component, OnInit, Input , Output , EventEmitter} from '@angular/core';\r\nimport { MonthNames } from 'src/app/models/monthNames';\r\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-month-title',\r\n  templateUrl: './month-title.component.html',\r\n  styleUrls: ['./month-title.component.scss']\r\n})\r\nexport class MonthTitleComponent implements OnInit {\r\n  @Input() month: number;\r\n  @Input() year: number;\r\n  @Input() date: number;\r\n  @Output() next = new EventEmitter();\r\n  @Output() previous = new EventEmitter();\r\n  @Output() dateChange = new EventEmitter();\r\n\r\n  monthNames: string[] = [\r\n    MonthNames.JAN,\r\n    MonthNames.FEB,\r\n    MonthNames.MAR,\r\n    MonthNames.APR,\r\n    MonthNames.MAY,\r\n    MonthNames.JUN,\r\n    MonthNames.JUL,\r\n    MonthNames.AUG,\r\n    MonthNames.SEP,\r\n    MonthNames.OCT,\r\n    MonthNames.NOV,\r\n    MonthNames.DEC\r\n  ];\r\n\r\n  currentDate: string\r\n\r\n  allowedYears: number[] = [];\r\n\r\n  formGroup: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.populateAllowedYears();\r\n    this.formGroup = this.formBuilder.group({\r\n      month: [this.month, [Validators.required]],\r\n      year: [this.year, [Validators.required]],\r\n      date: [this.date]\r\n    });\r\n    \r\n    this.setDate();\r\n  }\r\n\r\n  populateAllowedYears = () => {\r\n    for (let i = 2000; i <= 2100; i++) {\r\n      this.allowedYears.push(i);\r\n    }\r\n  }\r\n\r\n  monthYearChange = (e) => {\r\n    if (e.target.name === \"mobileDate\") {\r\n      let split = e.target.value.split(\"-\");\r\n      this.formGroup.controls.year.setValue(split[0]);\r\n      this.formGroup.controls.month.setValue(`${parseInt(split[1])-1}`);\r\n      this.formGroup.controls.date.setValue(split[2]);\r\n    }\r\n    this.dateChange.emit(new Date(parseInt(this.formGroup.controls.year.value), parseInt(this.formGroup.controls.month.value), parseInt(this.formGroup.controls.date.value)));\r\n  }\r\n\r\n  goToToday = () => {\r\n    this.formGroup.controls.month.setValue(new Date().getMonth());\r\n    this.formGroup.controls.year.setValue(new Date().getFullYear());\r\n    this.dateChange.emit(new Date());\r\n  }\r\n\r\n  goToNextMonth = (emit:boolean = true) => {\r\n    if (emit) this.next.emit();\r\n    this.formGroup.controls.month.setValue((parseInt(this.formGroup.controls.month.value) + 1) % 12);\r\n    if (parseInt(this.formGroup.controls.month.value) === 0) {\r\n      this.formGroup.controls.year.setValue(parseInt(this.formGroup.controls.year.value) + 1);\r\n    }\r\n    this.setDate();\r\n  }\r\n\r\n  goToPreviousMonth = (emit:boolean = true) => {\r\n    if (emit) this.previous.emit();\r\n    this.formGroup.controls.month.setValue((parseInt(this.formGroup.controls.month.value) + 11) % 12);\r\n    if (parseInt(this.formGroup.controls.month.value) === 11) {\r\n      this.formGroup.controls.year.setValue(parseInt(this.formGroup.controls.year.value) - 1);\r\n    }\r\n    this.setDate();\r\n  }\r\n\r\n  goToNextDay = () => {\r\n    let newDay = ((this.formGroup.controls.date.value + 1) % this.getLastDayOfMonth()) === 0 ? this.getLastDayOfMonth() : (this.formGroup.controls.date.value + 1) % this.getLastDayOfMonth();\r\n    if (newDay === 1) {\r\n      this.goToNextMonth(false);\r\n    }\r\n    this.formGroup.controls.date.setValue(newDay);\r\n    this.setDate();\r\n    this.dateChange.emit(new Date(parseInt(this.formGroup.controls.year.value), parseInt(this.formGroup.controls.month.value), parseInt(this.formGroup.controls.date.value)));\r\n  }\r\n\r\n  goToPreviousDay = () => {\r\n    let lastDayofPreviousMonth = this.getLastDayOfMonth(this.formGroup.controls.month.value - 1)\r\n    let newDay = (this.formGroup.controls.date.value - 1) < 1 ? lastDayofPreviousMonth : this.formGroup.controls.date.value - 1;\r\n    if (newDay === lastDayofPreviousMonth && (this.formGroup.controls.date.value - 1) < 1) {\r\n      this.goToPreviousMonth(false);\r\n    }\r\n    this.formGroup.controls.date.setValue(newDay);\r\n    this.setDate();\r\n    this.dateChange.emit(new Date(parseInt(this.formGroup.controls.year.value), parseInt(this.formGroup.controls.month.value), parseInt(this.formGroup.controls.date.value)));\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param m the month that you want to get the last day of. It will default to the current month.\r\n   * @param y  the year of the month that you want to get the last day of\r\n   * @returns the last day of the given month\r\n   */\r\n  getLastDayOfMonth = (m=this.formGroup.controls.month.value, y=this.formGroup.controls.year.value ) => {\r\n    let d = new Date(y, m + 1, 0);\r\n    return d.getDate();\r\n  }\r\n\r\n  setDate() {\r\n    let month = parseInt(this.formGroup.controls.month.value) + 1 < 10 ? `0${parseInt(this.formGroup.controls.month.value) + 1}` : parseInt(this.formGroup.controls.month.value) + 1;\r\n    let date = parseInt(this.formGroup.controls.date.value) < 10 ? `0${this.formGroup.controls.date.value}` : this.formGroup.controls.date.value;\r\n    this.currentDate = `${this.formGroup.controls.year.value}-${month}-${date}`\r\n  }\r\n}\r\n","<form [formGroup]=\"formGroup\">\r\n    <div class=\"month-title-container\">\r\n        <button class=\"previous\" (click)=\"goToPreviousMonth()\" title=\"Previous Month\">\r\n            <svg class=\"icon arrow-left\" viewBox=\"0 0 32 32\">\r\n                <path d=\"M1 16l15 15v-9h16v-12h-16v-9z\">\r\n                </path>\r\n            </svg>\r\n        </button>\r\n        <select name=\"monthSelect\" id=\"monthSelect\" title=\"Month Input\" formControlName=\"month\" (change)=\"monthYearChange($event)\">\r\n            <ng-template ngFor let-m [ngForOf]=\"monthNames\" let-i=\"index\">\r\n                <option value=\"{{i}}\">{{m}}</option>\r\n            </ng-template>\r\n        </select>\r\n        <select name=\"yearSelect\" id=\"yearSelect\" title=\"Year Input\" formControlName=\"year\" (change)=\"monthYearChange($event)\">\r\n            <ng-template ngFor let-y [ngForOf]=\"allowedYears\">\r\n                <option value=\"{{y}}\">{{y}}</option>\r\n            </ng-template>\r\n        </select>\r\n        <button class=\"next\" (click)=\"goToNextMonth()\" title=\"Next Month\">\r\n            <svg class=\"icon arrow-left\" viewBox=\"0 0 32 32\">\r\n                <path d=\"M31 16l-15-15v9h-16v12h16v9z\">\r\n                </path>\r\n            </svg>\r\n        </button>\r\n        <button class=\"today\" (click)=\"goToToday()\">Today</button>\r\n    </div>\r\n    <div class=\"mobile-title-container\">\r\n        <button class=\"previous\" (click)=\"goToPreviousDay()\" title=\"Previous Month\">\r\n            <svg class=\"icon arrow-left\" viewBox=\"0 0 32 32\">\r\n                <path d=\"M1 16l15 15v-9h16v-12h-16v-9z\">\r\n                </path>\r\n            </svg>\r\n        </button>\r\n        <input type=\"date\" name=\"mobileDate\" value=\"{{currentDate}}\" (change)=\"monthYearChange($event)\">\r\n        <button class=\"next\" (click)=\"goToNextDay()\" title=\"Next Month\">\r\n            <svg class=\"icon arrow-left\" viewBox=\"0 0 32 32\">\r\n                <path d=\"M31 16l-15-15v9h-16v12h16v9z\">\r\n                </path>\r\n            </svg>\r\n        </button>\r\n    </div>\r\n</form>\r\n","export class Task {\r\n    dueDate: Date;\r\n    name: string;\r\n    uuid: number;\r\n    recurring: boolean;\r\n    recurringFrequency: string;\r\n    recurringUntil: Date;\r\n\r\n    constructor(\r\n        dueDate: Date,\r\n        name: string,\r\n        recurring: boolean = false,\r\n        recurringFrequency: string = null,\r\n        recurringUntil: Date = null\r\n    ) {\r\n        this.uuid = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\r\n        this.dueDate = dueDate;\r\n        this.name = name;\r\n        this.recurring = recurring;\r\n        this.recurringFrequency = recurringFrequency;\r\n        this.recurringUntil = recurringUntil;\r\n    }\r\n}\r\n","export enum MonthNames {\r\n    JAN = 'January',\r\n    FEB = 'February',\r\n    MAR = 'March',\r\n    APR = 'April',\r\n    MAY = 'May',\r\n    JUN = 'June',\r\n    JUL = 'July',\r\n    AUG = 'August',\r\n    SEP = 'September',\r\n    OCT = 'October',\r\n    NOV = 'November',\r\n    DEC = 'December'\r\n}\r\n","import { Component, OnInit, Input} from '@angular/core';\r\nimport { Event } from 'src/app/models/event';\r\nimport { Task } from 'src/app/models/task';\r\nimport { EventService } from 'src/app/services/event.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-day',\r\n  templateUrl: './day.component.html',\r\n  styleUrls: ['./day.component.scss']\r\n})\r\nexport class DayComponent implements OnInit {\r\n\r\n  @Input() set day(value: Date) {\r\n    this.date = value;\r\n    this.ngOnInit();\r\n  }\r\n  @Input() month: number;\r\n\r\n  date: Date;\r\n  showDetail = false;\r\n  events: Event[];\r\n  tasks: Task[];\r\n  numOfEvents = 0;\r\n  numOfTasks = 0;\r\n\r\n  isToday = true;\r\n\r\n  constructor(\r\n    private eventService: EventService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.eventService.eventsSubject.subscribe(events => {\r\n      this.events = events.filter (event => this.eventInDay(event));\r\n      this.numOfEvents = this.events.length;\r\n    });\r\n\r\n    this.eventService.tasksSubject.subscribe(tasks => {\r\n      this.tasks = tasks.filter (task => this.taskInDay(task));\r\n      this.numOfTasks = this.tasks.length; \r\n    });\r\n\r\n    this.isToday = (\r\n      this.date.getFullYear() === new Date().getFullYear() &&\r\n      this.date.getMonth() === new Date().getMonth() &&\r\n      this.date.getDate() === new Date().getDate()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return true if 2 dates are the same, not caring about their hours minutes seconds etc.\r\n   * Else return false.\r\n   */\r\n  sameDay = (date1: Date, date2: Date) => {\r\n    return (\r\n      date1.getFullYear() === date2.getFullYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return true if date1 is on or before date2, not caring about hours minutes seconds etc.\r\n   * Else return false.\r\n   */\r\n  date1OnOrBeforeDate2 = (date1: Date, date2: Date) => {\r\n    return (this.sameDay(date1, date2) || date1 < date2)\r\n  }\r\n\r\n  /**\r\n   * Event should show up in day if either:\r\n   * 1. It is not recurring and its date is on this day.\r\n   * 2. It is recurring daily, and its first date is before or on this day, and its recurringUntil date is after or on this day.\r\n   * 3. It is recurring weekly, and its first date is before or on this day, and its recurringUntil date is after or on this day, and the\r\n   *    start date's weekday is the same as this day.\r\n   * 4. It is recurring monthly, and its first date is before or on this day, and its recurringUntil date is after or on this day, and the\r\n   *    start date's day of the month is the same as this day.\r\n   */\r\n  eventInDay = (event: Event) => {\r\n    // Case 1: Not recurring\r\n    if (!event.recurring) {\r\n      return (this.sameDay(event.startDate, this.date));\r\n    } else {\r\n      // Case 2: Recurring daily\r\n      if (event.recurringFrequency === 'DAILY') {\r\n        return (this.date1OnOrBeforeDate2(event.startDate, this.date) && \r\n          this.date1OnOrBeforeDate2(this.date, event.recurringUntil)\r\n        );\r\n      }\r\n  \r\n      // Case 3: Recurring weekly\r\n      if (event.recurringFrequency === 'WEEKLY') {\r\n        return (this.date1OnOrBeforeDate2(event.startDate, this.date) && \r\n          this.date1OnOrBeforeDate2(this.date, event.recurringUntil) &&\r\n          this.date.getDay() === event.startDate.getDay()\r\n        );\r\n      }\r\n  \r\n      // Case 4: Recurring monthly\r\n      if (event.recurringFrequency === 'MONTHLY') {\r\n        return (this.date1OnOrBeforeDate2(event.startDate, this.date) && \r\n          this.date1OnOrBeforeDate2(this.date, event.recurringUntil) &&\r\n          this.date.getDate() === event.startDate.getDate()\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  debug = () => {\r\n    console.log(this.date);\r\n  }\r\n\r\n  /**\r\n   * Task should show up in day if either:\r\n   * 1. It is not recurring and its date is on this day.\r\n   * 2. It is recurring daily, and its first date is before or on this day, and its recurringUntil date is after or on this day.\r\n   * 3. It is recurring weekly, and its first date is before or on this day, and its recurringUntil date is after or on this day, and the\r\n   *    start date's weekday is the same as this day.\r\n   * 4. It is recurring monthly, and its first date is before or on this day, and its recurringUntil date is after or on this day, and the\r\n   *    start date's day of the month is the same as this day.\r\n   */\r\n  taskInDay = (task: Task) => {\r\n    // Case 1: Not recurring\r\n    if (!task.recurring) {\r\n      return (this.sameDay(task.dueDate, this.date));\r\n    } else {\r\n      // Case 2: Recurring daily\r\n      if (task.recurringFrequency === 'DAILY') {\r\n        return (this.date1OnOrBeforeDate2(task.dueDate, this.date) && \r\n          this.date1OnOrBeforeDate2(this.date, task.recurringUntil)\r\n        );\r\n      }\r\n\r\n      // Case 3: Recurring weekly\r\n      if (task.recurringFrequency === 'WEEKLY') {\r\n        return (this.date1OnOrBeforeDate2(task.dueDate, this.date) && \r\n          this.date1OnOrBeforeDate2(this.date, task.recurringUntil) &&\r\n          this.date.getDay() === task.dueDate.getDay()\r\n        );\r\n      }\r\n\r\n      // Case 4: Recurring monthly\r\n      if (task.recurringFrequency === 'MONTHLY') {\r\n        return (this.date1OnOrBeforeDate2(task.dueDate, this.date) && \r\n          this.date1OnOrBeforeDate2(this.date, task.recurringUntil) &&\r\n          this.date.getDate() === task.dueDate.getDate()\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  showDayDetail = () => {\r\n    this.showDetail = true;\r\n  }\r\n\r\n  hideDayDetail = () => {\r\n    this.showDetail = false;\r\n  }\r\n\r\n  checkIfDayIsInCurrentMonth = () => {\r\n    return this.date.getMonth() === this.month;\r\n  }\r\n}\r\n","<div class=\"day-container\" [ngClass]=\"{'other-month': this.date.getMonth() !== this.month}\" (click)=\"showDayDetail()\">\r\n    <div class=\"date-number\" [ngClass]=\"{'today': this.isToday}\">\r\n        {{date | date: 'd'}}\r\n    </div>\r\n    <div class=\"count\">\r\n        <div>{{ events.length }} Events</div>\r\n        <div>{{ tasks.length }} Tasks</div>\r\n    </div>\r\n    <div class=\"event-task-container\">\r\n        <div *ngFor=\"let event of events\" class=\"preview event\">\r\n            <svg class=\"icon icon-calendar\" viewBox=\"0 0 32 32\">\r\n                <path d=\"M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z\">\r\n                </path>\r\n            </svg>\r\n            <div class=\"name\">\r\n                {{event.name}}\r\n            </div>\r\n        </div>\r\n        <div *ngFor=\"let task of tasks\" class=\"preview task\">\r\n            <svg class=\"icon icon-calendar\" viewBox=\"0 0 32 32\">\r\n                <path d=\"M12 2h20v4h-20v-4zM12 14h20v4h-20v-4zM12 26h20v4h-20v-4zM0 4c0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.209-1.791 4-4 4s-4-1.791-4-4zM0 16c0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.209-1.791 4-4 4s-4-1.791-4-4zM0 28c0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.209-1.791 4-4 4s-4-1.791-4-4z\">\r\n                </path>\r\n            </svg>\r\n            <div class=\"name\">\r\n                {{task.name}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-parent\" *ngIf=\"showDetail\" (click)=\"$event.stopPropagation(); hideDayDetail()\">\r\n    <app-modal (click)=\"$event.stopPropagation()\" (closeClick)=\"hideDayDetail()\">\r\n        <app-day-detail class=\"detail\" (closeClick)=\"hideDayDetail()\" [tasks]=\"tasks\" [events]=\"events\" [day]=\"date\">\r\n        </app-day-detail>\r\n    </app-modal>\r\n</div>\r\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\r\nimport { Event } from 'src/app/models/event';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { formatDate } from '@angular/common';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { ToastType } from 'src/app/models/toast';\r\n\r\n@Component({\r\n  selector: 'app-event-modal',\r\n  templateUrl: './event-modal.component.html',\r\n  styleUrls: ['./event-modal.component.scss']\r\n})\r\nexport class EventModalComponent implements OnInit {\r\n\r\n  @Output() close: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Input() event: Event;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() index: number;\r\n\r\n  formGroup: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private eventService: EventService,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.formGroup = this.formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      date: [null, [Validators.required]],\r\n      startTime: [null, [Validators.required]],\r\n      endTime: [null, [Validators.required]],\r\n      recurring: [false],\r\n      recurringFrequency: [''],\r\n      recurringUntil: [null]\r\n    }, {\r\n      validators: [\r\n        this.validateStartTimeBeforeEndTime(),\r\n        this.validateRecurringRequired(),\r\n        this.validateRecurringUntil()\r\n      ]\r\n    });\r\n  }\r\n\r\n  validateStartTimeBeforeEndTime = () => (group: FormGroup): ValidationErrors | null => {\r\n    if (group.controls.startTime.value > group.controls.endTime.value) {\r\n      return {startTimeBeforeEndTime: 'Start time must be before end time.'};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateRecurringUntil = () => (group: FormGroup): ValidationErrors | null => {\r\n    if (group.controls.recurring.value && group.controls.date.value > group.controls.recurringUntil.value) {\r\n      return {dateBeforeRecurringUntil: 'Please make sure the last recurring event is after the first event.'}\r\n    }\r\n  }\r\n\r\n  validateRecurringRequired = () => (group: FormGroup): ValidationErrors | null => {\r\n    if (group.controls.recurring.value) {\r\n      if (!group.controls.recurringFrequency.value || !group.controls.recurringUntil.value) {\r\n        return {recurring: 'Recurring frequency and until date are required.'}\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toggleRecurring = () => {\r\n    this.formGroup.controls.recurring.setValue(!this.formGroup.controls.recurring.value);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.event) {\r\n      this.formGroup.controls.name.setValue(this.event.name);\r\n      this.formGroup.controls.date.setValue(formatDate(this.event.startDate, 'yyyy-MM-dd', 'en'));\r\n      this.formGroup.controls.startTime.setValue(this.eventService.formatTime(this.event.startDate));\r\n      this.formGroup.controls.endTime.setValue(this.eventService.formatTime(this.event.endDate));\r\n      if (this.event.recurring) {\r\n        this.formGroup.controls.recurring.setValue(this.event.recurring);\r\n        this.formGroup.controls.recurringFrequency.setValue(this.event.recurringFrequency);\r\n        this.formGroup.controls.recurringUntil.setValue(formatDate(this.event.recurringUntil, 'yyyy-MM-dd', 'en'));\r\n      }\r\n    }\r\n  }\r\n\r\n  save = () => {\r\n    const startDate: Date = new Date(`${this.formGroup.controls.date.value}T${this.formGroup.controls.startTime.value}:00`);\r\n    const endDate: Date = new Date(`${this.formGroup.controls.date.value}T${this.formGroup.controls.endTime.value}:00`);\r\n    if (this.isEdit) {\r\n      // edit\r\n      this.event.startDate = startDate;\r\n      this.event.endDate = endDate;\r\n      this.event.name = this.formGroup.controls.name.value;\r\n      this.event.recurring = this.formGroup.controls.recurring.value;\r\n      this.event.recurringFrequency = this.formGroup.controls.recurringFrequency.value;\r\n      this.event.recurringUntil = new Date(`${this.formGroup.controls.recurringUntil.value}T00:00:00`);\r\n      this.eventService.updateEvent(this.event);\r\n      this.toastService.addToast(ToastType.success, 'Event was edited successfully!', 5);\r\n    } else {\r\n      // create\r\n      const event: Event = new Event(\r\n        startDate,\r\n        endDate,\r\n        this.formGroup.controls.name.value,\r\n        this.formGroup.controls.recurring.value,\r\n        this.formGroup.controls.recurringFrequency.value,\r\n        new Date(`${this.formGroup.controls.recurringUntil.value}T00:00:00`)\r\n      );\r\n      this.eventService.addEvent(event);\r\n      this.toastService.addToast(ToastType.success, 'Event was created successfully!', 5);\r\n    }\r\n    this.close.emit();\r\n  }\r\n\r\n}\r\n","<h1>{{isEdit ? 'Edit' : 'Create'}} Event</h1>\r\n<form [formGroup]=\"formGroup\">\r\n    <div class=\"input-container\">\r\n        <div class=\"label-right\">\r\n            <label for=\"inputName\">Name: </label>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <input  id=\"inputName\" type=\"text\" formControlName=\"name\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.name.value\">* (Required)</span>\r\n            </div>\r\n            <div class=\"errors\" *ngIf=\"formGroup.controls.name.touched && formGroup.controls.name.errors && formGroup.controls.name.errors.required\">\r\n                Please enter a name.\r\n            </div>\r\n        </div>\r\n        <div class=\"label-right\">\r\n            <label for=\"inputDate\">Date: </label>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <input  id=\"inputDate\" type=\"date\" formControlName=\"date\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.date.value\">* (Required)</span>\r\n            </div>\r\n            <div class=\"errors\" *ngIf=\"formGroup.controls.date.touched && formGroup.controls.date.errors && formGroup.controls.date.errors.required\">\r\n                Please enter a valid date.\r\n            </div>\r\n        </div>\r\n        <div class=\"label-right\">\r\n            <label for=\"inputStartTime\">Start Time: </label>\r\n        </div>\r\n        <div>\r\n\r\n            <div>\r\n                <input  id=\"inputStartTime\" type=\"time\" formControlName=\"startTime\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.startTime.value\">* (Required)</span>\r\n            </div>\r\n            <div class=\"errors\" *ngIf=\"formGroup.controls.startTime.touched && formGroup.controls.startTime.errors && formGroup.controls.startTime.errors.required\">\r\n                Please enter a valid start time.\r\n            </div>\r\n        </div>\r\n        <div class=\"label-right\">\r\n            <label for=\"inputEndTime\">End Time: </label>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <input  id=\"inputEndTime\" type=\"time\" formControlName=\"endTime\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.endTime.value\">* (Required)</span>\r\n            </div>\r\n            <div class=\"errors\" *ngIf=\"formGroup.controls.endTime.touched && formGroup.controls.endTime.errors && formGroup.controls.endTime.errors.required\">\r\n                Please enter a valid end time.\r\n            </div>\r\n            <div class=\"errors\" *ngIf=\"formGroup.errors && formGroup.errors['startTimeBeforeEndTime']\">\r\n                {{ formGroup.errors['startTimeBeforeEndTime'] }}\r\n            </div>\r\n        </div>\r\n        <div class=\"label-right\" (click)=\"toggleRecurring()\">\r\n            <label for=\"inputRecurring\">Recurring: </label>\r\n        </div>\r\n        <div>\r\n            <label class=\"switch\">\r\n                <input id=\"inputReccuring\" type=\"checkbox\" formControlName=\"recurring\">\r\n                <span class=\"slider round\"></span>\r\n            </label>\r\n        </div>\r\n        <ng-template [ngIf]=\"formGroup.controls.recurring.value\">\r\n            <div class=\"label-right\">\r\n                <label for=\"recurringFrequency\">Event should repeat: </label>\r\n            </div>\r\n            <div>\r\n                <select class=\"form-control\" id=\"recurringFrequency\" formControlName=\"recurringFrequency\">\r\n                    <option value=\"DAILY\" selected>Daily</option>\r\n                    <option value=\"WEEKLY\">Weekly</option>\r\n                    <option value=\"MONTHLY\">Monthly</option>\r\n                </select>\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.recurringFrequency.value\">* (Required) </span>\r\n            </div>\r\n            <div class=\"label-right\">\r\n                <label for=\"recurringUntil\"> Until: </label>\r\n            </div>\r\n            <div>\r\n                <input id=\"recurringUntil\" type=\"date\" formControlName=\"recurringUntil\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.recurringUntil.value\">* (Required)</span>\r\n                <div class=\"errors\" *ngIf=\"formGroup.errors && formGroup.errors['dateBeforeRecurringUntil']\">\r\n                    {{ formGroup.errors['dateBeforeRecurringUntil'] }}\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <button (click)=\"save()\" [disabled]=\"!formGroup.valid\">Save</button>\r\n</form>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n/**\r\n * MonthGridComponent shows the calendar grid of the days of the month, plus the month title.\r\n */\r\n@Component({\r\n  selector: 'app-month-grid',\r\n  templateUrl: './month-grid.component.html',\r\n  styleUrls: ['./month-grid.component.scss']\r\n})\r\nexport class MonthGridComponent implements OnInit {\r\n\r\n  // List of dates to be displayed in the month view.\r\n  // Includes the last few days of the previous month and the next few days of the next month.\r\n  days: Date[] = [];\r\n  month: number;\r\n  date: number;\r\n  year: number;\r\n  singleDay: Date;\r\n  taskShow = false;\r\n  eventShow = false;\r\n  noteShow = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.singleDay = new Date();\r\n    this.populateDaysFromSingleDay(this.singleDay);\r\n  }\r\n\r\n  goToNextMonth = () => {\r\n    this.singleDay.setMonth(this.singleDay.getMonth() + 1);\r\n    this.populateDaysFromSingleDay(this.singleDay);\r\n  }\r\n\r\n  goToPreviousMonth = () => {\r\n    this.singleDay.setMonth(this.singleDay.getMonth() - 1);\r\n    this.populateDaysFromSingleDay(this.singleDay);\r\n  }\r\n\r\n  goToMonth = (newDate: Date) => {\r\n    this.singleDay = newDate;\r\n    this.populateDaysFromSingleDay(this.singleDay);\r\n  }\r\n\r\n  /**\r\n   * Input: singleDay, which can be any Date\r\n   * Modifies: this.days, this.month, this.year\r\n   * Effects: Populates this.days to be a list of Dates\r\n   *  with the first date in the list being the last Sunday of the month before singleDay is in,\r\n   *  or the first of the month singleDay is in if the first is a Sunday,\r\n   *  and the last date in the list being the first Saturday of the month after singleDay is in,\r\n   *  or the last of the month singleDay is in if the last is a Saturday\r\n   */\r\n  populateDaysFromSingleDay = (singleDay: Date) => {\r\n    this.days = [];\r\n\r\n    // Get first day of month singleDay is in\r\n    const firstDayOfMonth: Date = new Date(singleDay.getFullYear(), singleDay.getMonth(), 1);\r\n\r\n    // Get number of days to show from last month\r\n    // If firstDayOfMonth is a Sunday, show 0 days from last month\r\n    // If firstDayOfMonth is a Monday, show 1 day from last month\r\n    // etc.\r\n    const daysToShowFromLastMonth: number = firstDayOfMonth.getDay();\r\n\r\n    const firstDayToShow: Date = new Date(firstDayOfMonth);\r\n    firstDayToShow.setDate(firstDayOfMonth.getDate() - daysToShowFromLastMonth);\r\n\r\n    // Get last day of month singleDay is in\r\n    const lastDayOfMonth: Date = new Date(singleDay.getFullYear(), singleDay.getMonth() + 1, 0);\r\n\r\n    // Get number of days to show from next month\r\n    // If lastDayOfMonth is a Sunday, show 6 days from next month\r\n    // If lastDayOfMonth is a Saturday, show 0 days from next month\r\n    const daysToShowFromNextMonth: number = 6 - lastDayOfMonth.getDay();\r\n\r\n    const lastDayToShow: Date = new Date (lastDayOfMonth);\r\n    lastDayToShow.setDate(lastDayOfMonth.getDate() + daysToShowFromNextMonth);\r\n\r\n    const numberOfDaysToShow: number = (lastDayToShow.getTime() - firstDayToShow.getTime()) / (1000 * 60 * 60 * 24) + 1;\r\n\r\n    for (let i = 0; i < numberOfDaysToShow; i++) {\r\n      const dateToPush = new Date(firstDayToShow);\r\n      dateToPush.setDate(firstDayToShow.getDate() + i);\r\n      this.days.push(dateToPush);\r\n    }\r\n    this.month = singleDay.getMonth();\r\n    this.year = singleDay.getFullYear();\r\n    this.date = singleDay.getDate();\r\n  }\r\n\r\n  showTaskModal = () => { this.taskShow = true; };\r\n  showEventModal = () => { this.eventShow = true; };\r\n  showNoteModal = () => { this.noteShow = true; };\r\n\r\n  hideTaskModal = () => { this.taskShow = false; };\r\n  hideEventModal = () => { this.eventShow = false; };\r\n  hideNoteModal = () => { this.noteShow = false; };\r\n}\r\n","<app-month-title [month]='month' [date]='date' [year]='year' (next)='goToNextMonth()' (previous)='goToPreviousMonth()' (dateChange)=\"goToMonth($event)\"></app-month-title>\r\n<div id=\"desktopView\">\r\n    <div id=\"dayWrapper\">\r\n        <div class=\"weekday-name\">Sunday</div>\r\n        <div class=\"weekday-name\">Monday</div>\r\n        <div class=\"weekday-name\">Tuesday</div>\r\n        <div class=\"weekday-name\">Wednesday</div>\r\n        <div class=\"weekday-name\">Thursday</div>\r\n        <div class=\"weekday-name\">Friday</div>\r\n        <div class=\"weekday-name\">Saturday</div>\r\n        <app-day *ngFor=\"let day of days\" [day]='day' [month]='month'></app-day>\r\n    </div>\r\n</div>\r\n<div id=\"mobileView\">\r\n    <app-day [day]='singleDay' [month]='month'></app-day>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Task } from '../../../models/task';\r\nimport { Event } from '../../../models/event';\r\nimport { EventService } from '../../../services/event.service';\r\nimport { ToastService } from '../../../services/toast.service';\r\nimport { ToastType } from '../../../models/toast';\r\n\r\n@Component({\r\n  selector: 'app-day-detail',\r\n  templateUrl: './day-detail.component.html',\r\n  styleUrls: ['./day-detail.component.scss']\r\n})\r\nexport class DayDetailComponent implements OnInit {\r\n\r\n  @Input() tasks: Task[];\r\n  @Input() events: Event[];\r\n  @Input() day: Date;\r\n  @Output() closeClick = new EventEmitter();\r\n\r\n  // Edit task/event modals\r\n  taskShow: Task = null;\r\n  eventShow: Event = null;\r\n\r\n  // Create new task/event modals\r\n  newTaskShow: Task = null;\r\n  newEventShow: Event = null;\r\n\r\n  deleteEventConfirm: Event = null;\r\n  deleteTaskConfirm: Task = null;\r\n\r\n\r\n  constructor(\r\n    private eventService: EventService,\r\n    private toastService: ToastService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  close = (event) => {\r\n    event.stopPropagation();\r\n    this.closeClick.emit();\r\n  }\r\n\r\n  showTaskModal = (task: Task) => { this.taskShow = task; };\r\n  hideTaskModal = () => { this.taskShow = null; };\r\n  showEventModal = (event: Event) => { this.eventShow = event; };\r\n  hideEventModal = () => { this.eventShow = null; };\r\n\r\n  showNewTaskModal = () => {\r\n    const dueDate = new Date(this.day);\r\n    dueDate.setHours(new Date().getHours() + 1);\r\n    dueDate.setMinutes(0);\r\n    this.newTaskShow = new Task(dueDate, '');\r\n  }\r\n  showNewEventModal = () => {\r\n    const startDate = new Date(this.day);\r\n    startDate.setHours(new Date().getHours() + 1);\r\n    startDate.setMinutes(0);\r\n    const endDate = new Date(this.day);\r\n    endDate.setHours(new Date().getHours() + 2);\r\n    endDate.setMinutes(0);\r\n    this.newEventShow = new Event(startDate, endDate, '');\r\n  }\r\n  hideNewTaskModal = () => {\r\n    this.newTaskShow = null;\r\n  }\r\n  hideNewEventModal = () => {\r\n    this.newEventShow = null;\r\n  }\r\n\r\n  deleteTask = (task: Task) => {\r\n    this.eventService.deleteTask(task);\r\n    this.toastService.addToast(ToastType.success, 'Task was deleted successfully!', 5);\r\n  }\r\n  deleteEvent = (event: Event) => {\r\n    this.eventService.deleteEvent(event);\r\n    this.toastService.addToast(ToastType.success, 'Event was deleted successfully!', 5);\r\n  }\r\n\r\n}\r\n","<div class=\"modal-container\">\r\n    <h2> {{day | date}} </h2>\r\n    <div class=\"tasks-events-grid\">\r\n        <div>\r\n            <div class=\"title-container\">\r\n                <svg class=\"icon icon-calendar\" viewBox=\"0 0 32 32\">\r\n                    <path d=\"M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z\">\r\n                    </path>\r\n                </svg>\r\n                <h3>Events</h3>\r\n                <button class=\"create-button event\" (click)=\"showNewEventModal()\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-parent\" *ngIf=\"newEventShow\" (click)=\"hideNewEventModal()\">\r\n                <app-modal (click)=\"$event.stopPropagation()\" (closeClick)=\"hideNewEventModal()\">\r\n                    <app-event-modal (close)=\"hideNewEventModal()\" [event]=\"newEventShow\"></app-event-modal>\r\n                </app-modal>\r\n            </div>\r\n            <div *ngIf=\"!events.length\" class=\"no-events-tasks\">No events on this day.</div>\r\n            <div class=\"task-event-outer-container\">\r\n                <div class=\"event-container\" *ngFor=\"let event of events; index as i\">\r\n                    <div class=\"name-container\">\r\n                        <h4>{{event.name}}</h4>\r\n                        <button (click)=\"showEventModal(event)\" class=\"edit-button\">\r\n                            <svg class=\"icon icon-pencil\" viewBox=\"0 0 32 32\">\r\n                                <path d=\"M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z\">\r\n                                </path>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                    <div>{{event.startDate | date:'h:mm a'}} - {{event.endDate | date:'h:mm a'}}</div>\r\n                    <button *ngIf=\"deleteEventConfirm !== event\" (click)=\"deleteEventConfirm = event\" class=\"dangerous delete-button\">\r\n                        <svg class=\"icon icon-bin\" viewBox=\"0 0 32 32\">\r\n                            <path d=\"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"></path>\r\n                            <path d=\"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <div class=\"delete-confirm\" *ngIf=\"deleteEventConfirm === event\">Are you sure?\r\n                        <ng-template [ngIf]=\"event.recurring\">This will delete all events in the series.</ng-template>\r\n                        <button (click)=\"deleteEvent(event)\" class=\"dangerous\">Yes, Delete</button>\r\n                        <button (click)=\"deleteEventConfirm = null\">No, Cancel</button>\r\n                    </div>\r\n                    <div class=\"modal-parent\" *ngIf=\"eventShow === event\" (click)=\"hideEventModal()\">\r\n                        <app-modal (click)=\"$event.stopPropagation()\" (closeClick)=\"hideEventModal()\">\r\n                            <app-event-modal (close)=\"hideEventModal()\" [event]=\"event\" [index]=\"i\" [isEdit]=\"true\"></app-event-modal>\r\n                        </app-modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"title-container\">\r\n                <svg class=\"icon icon-calendar\" viewBox=\"0 0 32 32\">\r\n                    <path d=\"M12 2h20v4h-20v-4zM12 14h20v4h-20v-4zM12 26h20v4h-20v-4zM0 4c0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.209-1.791 4-4 4s-4-1.791-4-4zM0 16c0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.209-1.791 4-4 4s-4-1.791-4-4zM0 28c0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.209-1.791 4-4 4s-4-1.791-4-4z\">\r\n                    </path>\r\n                </svg>\r\n                <h3>Tasks</h3>\r\n                <button class=\"create-button task\" (click)=\"showNewTaskModal()\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg></button>\r\n            </div>\r\n            <div class=\"modal-parent\" *ngIf=\"newTaskShow\" (click)=\"hideNewTaskModal()\">\r\n                <app-modal (click)=\"$event.stopPropagation()\" (closeClick)=\"hideNewTaskModal()\">\r\n                    <app-task-modal (close)=\"hideNewTaskModal()\" [task]=\"newTaskShow\"></app-task-modal>\r\n                </app-modal>\r\n            </div>\r\n            <div *ngIf=\"!tasks.length\" class=\"no-events-tasks\">No tasks on this day.</div>\r\n            <div class=\"task-event-outer-container\">\r\n                <div class=\"task-container\" *ngFor=\"let task of tasks; index as i\">\r\n                    <div class=\"name-container\">\r\n                        <h4>{{task.name}}</h4>\r\n                        <button (click)=\"showTaskModal(task)\" class=\"edit-button\">\r\n                            <svg class=\"icon icon-pencil\" viewBox=\"0 0 32 32\">\r\n                                <path d=\"M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z\">\r\n                                </path>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                    <div>Due: {{task.dueDate | date:'h:mm a'}}</div>\r\n                    <button *ngIf=\"deleteTaskConfirm !== task\" (click)=\"deleteTaskConfirm = task\" class=\"dangerous delete-button\">\r\n                        <svg class=\"icon icon-bin\" viewBox=\"0 0 32 32\">\r\n                            <path d=\"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"></path>\r\n                            <path d=\"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <div class=\"delete-confirm\" *ngIf=\"deleteTaskConfirm === task\">Are you sure?\r\n                        <ng-template [ngIf]=\"task.recurring\">This will delete all tasks in the series.</ng-template>\r\n                        <button (click)=\"deleteTask(task)\" class=\"dangerous\">Yes, Delete</button>\r\n                        <button (click)=\"deleteTaskConfirm = null\">No, Cancel</button>\r\n                    </div>\r\n                    <div class=\"modal-parent\" *ngIf=\"taskShow === task\" (click)=\"hideTaskModal()\">\r\n                        <app-modal (click)=\"$event.stopPropagation()\" (closeClick)=\"hideTaskModal()\">\r\n                            <app-task-modal (close)=\"hideTaskModal()\" [task]=\"task\" [index]=\"i\" [isEdit]=\"true\"></app-task-modal>\r\n                        </app-modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export class Note{\r\n    uuid: number;\r\n    createDate: Date;\r\n    updateDate: Date;\r\n    text: string;\r\n    title: string;\r\n    constructor(title: string, text: string, createDate: Date= null, updateDate: Date= null){\r\n        this.uuid = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\r\n        this.createDate = createDate || new Date();\r\n        this.updateDate = updateDate || new Date();\r\n        this.text = text;\r\n        this.title = title;\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'calendar';\r\n  \r\n  currentMonth = new Date().getMonth();\r\n  currentDate = new Date();\r\n}\r\n","<!-- <app-activity-log-sidebar>\r\n    <app-activity-log></app-activity-log>\r\n</app-activity-log-sidebar> -->\r\n<app-month-grid></app-month-grid>\r\n<app-notes-sidebar>\r\n    <app-notes></app-notes>\r\n</app-notes-sidebar>\r\n<app-toast></app-toast>","import { Component, OnInit } from '@angular/core';\r\nimport { Note } from 'src/app/models/note';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { ToastType } from 'src/app/models/toast';\r\n\r\n@Component({\r\n  selector: 'app-notes',\r\n  templateUrl: './notes.component.html',\r\n  styleUrls: ['./notes.component.scss']\r\n})\r\nexport class NotesComponent implements OnInit {\r\n  notes: Note[] = [];\r\n  noteShow: Note = null;\r\n  deleteNoteConfirm: Note = null;\r\n\r\n  constructor(\r\n    private eventService: EventService,\r\n    private toastService: ToastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.eventService.notesSubject.subscribe(notes => {\r\n      this.notes = notes;\r\n    });\r\n  }\r\n\r\n  showNoteModal = (note: Note = null) => {\r\n    if (note) {\r\n      this.noteShow = note;\r\n    } else {\r\n      this.noteShow = new Note('', ''); \r\n    }\r\n  };\r\n  hideNoteModal = () => { this.noteShow = null; };\r\n\r\n  deleteNote = (note: Note) => {\r\n    this.eventService.deleteNote(note);\r\n    this.toastService.addToast(ToastType.success, 'Note was deleted successfully!', 5);\r\n  }\r\n\r\n}\r\n","<div class=\"title-left\">\r\n    <h2>Notes</h2>\r\n    <button (click)=\"showNoteModal()\" title=\"Create New Note\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/>\r\n        </svg>\r\n    </button>\r\n</div>\r\n<div class=\"note-parent\">\r\n    <div class=\"note-container\" *ngFor=\"let note of notes; index as i\">\r\n        <div class=\"title-left\">\r\n            <h3>{{note.title}}</h3>\r\n            <button class=\"edit-button\" (click)=\"showNoteModal(note)\" title=\"Edit Note\">\r\n                <svg class=\"icon icon-pencil\" viewBox=\"0 0 32 32\">\r\n                    <path d=\"M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z\">\r\n                    </path>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n        <h4>Created: {{note.createDate | date:'short'}}</h4>\r\n        <h4>Updated: {{note.updateDate | date:'short'}}</h4>\r\n        <p [innerHTML]=\"note.text | newline\"></p>\r\n        <button *ngIf=\"deleteNoteConfirm !== note\" (click)=\"deleteNoteConfirm = note\" class=\"dangerous delete-button\" title=\"Delete Note\">\r\n            <svg class=\"icon icon-bin\" viewBox=\"0 0 32 32\">\r\n                <path d=\"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"></path>\r\n                <path d=\"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"></path>\r\n            </svg>\r\n        </button>\r\n        <div class=\"delete-confirm\" *ngIf=\"deleteNoteConfirm === note\">Are you sure?\r\n            <button (click)=\"deleteNote(note)\" class=\"dangerous\">Yes, Delete</button>\r\n            <button (click)=\"deleteNoteConfirm = null\">No, Cancel</button>\r\n        </div>\r\n        <div class=\"modal-parent\" *ngIf=\"noteShow === note\" (click)=\"hideNoteModal()\">\r\n            <app-modal (click)=\"$event.stopPropagation()\" (closeClick)=\"hideNoteModal()\">\r\n                <app-note-modal (close)=\"hideNoteModal()\" [note]=\"note\" [index]=\"i\" [isEdit]=\"true\"></app-note-modal>\r\n            </app-modal>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-parent\" *ngIf=\"noteShow && noteShow.title === ''\" (click)=\"hideNoteModal()\">\r\n    <app-modal (click)=\"$event.stopPropagation()\" (closeClick)=\"hideNoteModal()\">\r\n        <app-note-modal (close)=\"hideNoteModal()\"></app-note-modal>\r\n    </app-modal>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { Toast, ToastType } from 'src/app/models/toast';\r\n\r\n\r\n@Component({\r\n  selector: 'app-toast',\r\n  templateUrl: './toast.component.html',\r\n  styleUrls: ['./toast.component.scss']\r\n})\r\nexport class ToastComponent implements OnInit {\r\n\r\n  constructor(private toastService: ToastService) { }\r\n\r\n  toasts: Toast[];\r\n  ToastType = ToastType;\r\n\r\n  ngOnInit(): void {\r\n    this.toastService.toastsSubject.subscribe(toasts => {\r\n      this.toasts = toasts;\r\n    });\r\n  }\r\n\r\n  close = (toast) => {\r\n    this.toastService.removeToast(toast);\r\n  }\r\n\r\n}\r\n","<div class=\"toaster\" >\r\n    <div class=\"toast\" *ngFor=\"let toast of toasts\" [ngClass]=\"{\r\n        'success': toast.type === ToastType.success,\r\n        'error': toast.type === ToastType.error,\r\n        'info': toast.type === ToastType.info}\">\r\n        <div class=\"text\">\r\n            {{toast.text}}\r\n        </div>\r\n        <button class=\"close\" (click)=\"close(toast)\">Dismiss</button>\r\n    </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MonthGridComponent } from './month-grid/month-grid.component';\r\nimport { MonthTitleComponent } from './month-grid/month-title/month-title.component';\r\nimport { DayComponent } from './month-grid/day/day.component';\r\n\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { DayDetailComponent } from './month-grid/day/day-detail/day-detail.component';\r\nimport { ModalComponent } from './shared/modal/modal.component';\r\nimport { TaskModalComponent } from './task-modal/task-modal.component';\r\nimport { EventModalComponent } from './event-modal/event-modal.component';\r\nimport { NoteModalComponent } from './note-modal/note-modal.component';\r\nimport { NotesComponent } from './notes/notes.component';\r\n\r\nimport { NewlinePipe } from 'src/app/pipes/newline.pipe';\r\nimport { ToastComponent } from './shared/toast/toast.component';\r\nimport { NotesSidebarComponent } from './shared/notes-sidebar/notes-sidebar.component';\r\nimport { ActivityLogSidebarComponent } from './shared/activity-log-sidebar/activity-log-sidebar.component';\r\nimport { ActivityLogComponent } from './activity-log/activity-log.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MonthGridComponent,\r\n    MonthTitleComponent,\r\n    DayComponent,\r\n    DayDetailComponent,\r\n    ModalComponent,\r\n    TaskModalComponent,\r\n    EventModalComponent,\r\n    NoteModalComponent,\r\n    NotesComponent,\r\n    NewlinePipe,\r\n    ToastComponent,\r\n    NotesSidebarComponent,\r\n    ActivityLogSidebarComponent,\r\n    ActivityLogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    EventService,\r\n    ToastService\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  exports: [NewlinePipe]\r\n})\r\nexport class AppModule { }\r\n","export class Event{\r\n    startDate: Date;\r\n    endDate: Date;\r\n    name: string;\r\n    uuid: number;\r\n    recurring: boolean;\r\n    recurringFrequency: string;\r\n    recurringUntil: Date;\r\n\r\n    constructor(\r\n        startDate: Date,\r\n        endDate: Date,\r\n        name: string,\r\n        recurring: boolean = false,\r\n        recurringFrequency: string = null,\r\n        recurringUntil: Date = null\r\n    ) {\r\n        this.uuid = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\r\n        this.startDate = startDate;\r\n        this.endDate = endDate;\r\n        this.name = name;\r\n        this.recurring = recurring;\r\n        this.recurringFrequency = recurringFrequency;\r\n        this.recurringUntil = recurringUntil;\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { ToastType } from 'src/app/models/toast';\r\nimport { Note } from 'src/app/models/note';\r\n\r\n@Component({\r\n  selector: 'app-note-modal',\r\n  templateUrl: './note-modal.component.html',\r\n  styleUrls: ['./note-modal.component.scss']\r\n})\r\nexport class NoteModalComponent implements OnInit {\r\n\r\n  @Output() close: EventEmitter<void> = new EventEmitter();\r\n  @Input() note: Note;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() index: number;\r\n\r\n  formGroup: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private eventService: EventService,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.formGroup = this.formBuilder.group({\r\n      title: ['', [Validators.required]],\r\n      text: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.note) {\r\n      this.formGroup.controls.title.setValue(this.note.title);\r\n      this.formGroup.controls.text.setValue(this.note.text);\r\n    }\r\n  }\r\n\r\n  save = () => {\r\n    if (this.isEdit) {\r\n      // edit\r\n      this.note.updateDate = new Date();\r\n      this.note.title = this.formGroup.controls.title.value;\r\n      this.note.text = this.formGroup.controls.text.value;\r\n      this.eventService.updateNote(this.note);\r\n      this.toastService.addToast(ToastType.success, 'Note was edited successfully!', 5);\r\n    } else {\r\n      // create\r\n      const note: Note = new Note(this.formGroup.controls.title.value, this.formGroup.controls.text.value, new Date(), new Date());\r\n      this.eventService.addNote(note);\r\n      this.toastService.addToast(ToastType.success, 'Note was created successfully!', 5);\r\n    }\r\n    this.close.emit();\r\n  }\r\n\r\n}\r\n","<h1>{{isEdit ? 'Edit' : 'Create'}} Note</h1>\r\n<form [formGroup]=\"formGroup\">\r\n    <div class=\"input-container\">\r\n        <div class=\"label-right\">\r\n            <label for=\"inputTitle\">Title: </label>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <input id=\"inputTitle\" type=\"text\" formControlName=\"title\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.title.value\">* (Required)</span>\r\n            </div>\r\n            <div class=\"errors\" *ngIf=\"formGroup.controls.title.touched && formGroup.controls.title.errors && formGroup.controls.title.errors.required\">\r\n                Please enter a title.\r\n            </div>\r\n        </div>\r\n        <div class=\"label-right\">\r\n            <label for=\"inputText\">Text: </label>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <textarea id=\"inputText\" type=\"text\" formControlName=\"text\"></textarea>\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.text.value\">* (Required)</span>\r\n                <div class=\"errors\" *ngIf=\"formGroup.controls.text.touched && formGroup.controls.text.errors && formGroup.controls.text.errors.required\">\r\n                    Please enter some text.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button (click)=\"save()\" [disabled]=\"!formGroup.valid\">Save</button>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { Task } from '../models/task';\r\nimport { Note } from '../models/note';\r\nimport { Event } from '../models/event';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n  constructor() {\r\n    this.events = [];\r\n    this.tasks = [];\r\n    this.notes = [];\r\n    this.mockData();\r\n    this.eventsSubject.next(this.events);\r\n    this.tasksSubject.next(this.tasks);\r\n    this.notesSubject.next(this.notes);\r\n  }\r\n\r\n  public eventsSubject: BehaviorSubject<Event[]> = new BehaviorSubject([]);\r\n  public tasksSubject: BehaviorSubject<Task[]> = new BehaviorSubject([]);\r\n  public notesSubject: BehaviorSubject<Note[]> = new BehaviorSubject([]);\r\n  private events: Event[];\r\n  private tasks: Task[];\r\n  private notes: Note[];\r\n\r\n  addEvent = (event: Event) => {\r\n    this.events.push(event);\r\n    this.eventsSubject.next(this.events);\r\n  }\r\n\r\n  updateEvent = (event: Event) => {\r\n    const index = this.events.findIndex((e => e.uuid === event.uuid));\r\n    this.events[index] = event;\r\n    this.eventsSubject.next(this.events);\r\n  }\r\n\r\n  deleteEvent = (event: Event) => {\r\n    const index = this.events.findIndex((e => e.uuid === event.uuid));\r\n    this.events.splice(index, 1);\r\n    this.eventsSubject.next(this.events);\r\n  }\r\n\r\n  addTask = (task: Task) => {\r\n    this.tasks.push(task);\r\n    this.tasksSubject.next(this.tasks);\r\n  }\r\n\r\n  updateTask = (task: Task) => {\r\n    const index = this.tasks.findIndex((t => t.uuid === task.uuid));\r\n    this.tasks[index] = task;\r\n    this.tasksSubject.next(this.tasks);\r\n  }\r\n\r\n  deleteTask = (task: Task) => {\r\n    const index = this.tasks.findIndex((t => t.uuid === task.uuid));\r\n    this.tasks.splice(index, 1);\r\n    this.tasksSubject.next(this.tasks);\r\n  }\r\n\r\n  addNote = (note: Note) => {\r\n    this.notes.push(note);\r\n    this.notesSubject.next(this.notes);\r\n  }\r\n\r\n  updateNote = (note: Note) => {\r\n    const index = this.notes.findIndex((n => n.uuid === note.uuid));\r\n    this.notes[index] = note;\r\n    this.notesSubject.next(this.notes);\r\n  }\r\n\r\n  deleteNote = (note: Note) => {\r\n    const index = this.notes.findIndex((t => t.uuid === note.uuid));\r\n    this.notes.splice(index, 1);\r\n    this.notesSubject.next(this.notes);\r\n  }\r\n\r\n  mockData = () => {\r\n    this.events.push(new Event(new Date('2022-04-14T11:00:00'),\r\n                                new Date('2022-04-14T13:00:00'),\r\n                                'Birthday Party: Hannah'));\r\n    this.events.push(new Event(new Date('2022-04-14T11:00:00'),\r\n                                new Date('2022-04-14T13:00:00'),\r\n                                'Birthday Party: Jhabiz'));\r\n    this.events.push(new Event(new Date('2022-04-14T11:00:00'),\r\n                                new Date('2022-04-14T13:00:00'),\r\n                                'Birthday Party: Yugank'));\r\n    this.events.push(new Event(new Date('2022-04-14T14:00:00'),\r\n                                new Date('2022-04-14T15:00:00'),\r\n                                'Shopping trip'));\r\n    this.events.push(new Event(new Date('2022-04-14T16:00:00'),\r\n                                new Date('2022-04-14T17:00:00'),\r\n                                'Dinner'));\r\n\r\n    this.tasks.push(new Task(new Date('2022-04-14T16:30:00'),\r\n                              'Homework'));\r\n    this.tasks.push(new Task(new Date('2022-04-14T16:30:00'),\r\n                              'More Homework'));\r\n    this.tasks.push(new Task(new Date('2022-04-14T16:30:00'),\r\n                              'So Much Homework'));\r\n    this.tasks.push(new Task(new Date('2022-04-14T16:30:00'),\r\n                              'Chill'));\r\n\r\n    this.notes.push(new Note(\r\n      'Grocery List',\r\n      'Eggs, bread, butter',\r\n      new Date('2022-02-06T10:00:00'),\r\n      new Date('2022-02-08T11:00:00')\r\n    ));\r\n    this.notes.push(new Note(\r\n      'Thoughts',\r\n      'Programming is kinda fun I guess',\r\n      new Date('2022-02-06T10:00:00'),\r\n      new Date('2022-02-08T11:00:00')\r\n    ));\r\n    this.notes.push(new Note(\r\n      'Thoughts 2',\r\n      'Not really tho',\r\n      new Date('2022-02-06T10:00:00'),\r\n      new Date('2022-02-08T11:00:00')\r\n    ));\r\n    this.notes.push(new Note(\r\n      'Thoughts 3',\r\n      'Hannah is an edgelord',\r\n      new Date('2022-02-06T10:00:00'),\r\n      new Date('2022-02-08T11:00:00')\r\n    ));\r\n  }\r\n\r\n  formatTime = (inputDate: Date): string => {\r\n    return `${(inputDate.getHours() < 10 ? '0' : '') + inputDate.getHours()}:${(inputDate.getMinutes() < 10 ? '0' : '') +\r\n    inputDate.getMinutes()}`;\r\n  }\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\r\nimport { Task } from 'src/app/models/task';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { ToastType } from 'src/app/models/toast';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-task-modal',\r\n  templateUrl: './task-modal.component.html',\r\n  styleUrls: ['./task-modal.component.scss']\r\n})\r\nexport class TaskModalComponent implements OnInit {\r\n\r\n  @Output() close: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Input() task: Task;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() index: number;\r\n\r\n  formGroup: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private eventService: EventService,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.formGroup = this.formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      dueDate: [null, [Validators.required]],\r\n      dueTime: [null, [Validators.required]],\r\n      recurring: [false],\r\n      recurringFrequency: [''],\r\n      recurringUntil: [null]\r\n    }, {\r\n      validators: [\r\n        this.validateRecurringRequired(),\r\n        this.validateRecurringUntil()\r\n      ]\r\n    });\r\n  }\r\n\r\n  validateRecurringRequired = () => (group: FormGroup): ValidationErrors | null => {\r\n    if (group.controls.recurring.value) {\r\n      if (!group.controls.recurringFrequency.value || !group.controls.recurringUntil.value) {\r\n        return {recurring: 'Recurring frequency and until date are required.'}\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateRecurringUntil = () => (group: FormGroup): ValidationErrors | null => {\r\n    if (group.controls.recurring.value && group.controls.dueDate.value > group.controls.recurringUntil.value) {\r\n      return {dateBeforeRecurringUntil: 'Please make sure the last recurring task is after the first task.'}\r\n    }\r\n  }\r\n\r\n  toggleRecurring = () => {\r\n    this.formGroup.controls.recurring.setValue(!this.formGroup.controls.recurring.value);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.task) {\r\n      this.formGroup.controls.name.setValue(this.task.name);\r\n      this.formGroup.controls.dueDate.setValue(formatDate(this.task.dueDate, 'yyyy-MM-dd', 'en'));\r\n      this.formGroup.controls.dueTime.setValue(this.eventService.formatTime(this.task.dueDate));\r\n      if (this.task.recurring) {\r\n        this.formGroup.controls.recurring.setValue(this.task.recurring);\r\n        this.formGroup.controls.recurringFrequency.setValue(this.task.recurringFrequency);\r\n        this.formGroup.controls.recurringUntil.setValue(formatDate(this.task.recurringUntil, 'yyyy-MM-dd', 'en'));\r\n      }\r\n    }\r\n  }\r\n\r\n  save = () => {\r\n    const dueDate: Date = new Date(`${this.formGroup.controls.dueDate.value}T${this.formGroup.controls.dueTime.value}:00`);\r\n    if (this.isEdit) {\r\n      // edit\r\n      this.task.dueDate = dueDate;\r\n      this.task.name = this.formGroup.controls.name.value;\r\n      this.task.recurring = this.formGroup.controls.recurring.value;\r\n      this.task.recurringFrequency = this.formGroup.controls.recurringFrequency.value;\r\n      this.task.recurringUntil = new Date(`${this.formGroup.controls.recurringUntil.value}T00:00:00`);\r\n      this.eventService.updateTask(this.task);\r\n      this.toastService.addToast(ToastType.success, 'Event was edited successfully!', 5);\r\n    } else {\r\n      // create\r\n      const task: Task = new Task(\r\n        dueDate,\r\n        this.formGroup.controls.name.value,\r\n        this.formGroup.controls.recurring.value,\r\n        this.formGroup.controls.recurringFrequency.value,\r\n        new Date(`${this.formGroup.controls.recurringUntil.value}T00:00:00`)\r\n      );\r\n      this.eventService.addTask(task);\r\n      this.toastService.addToast(ToastType.success, 'Event was created successfully!', 5);\r\n    }\r\n    this.close.emit();\r\n  }\r\n\r\n}\r\n","<h1>{{isEdit ? 'Edit' : 'Create'}} Task</h1>\r\n<form [formGroup]=\"formGroup\">\r\n    <div class=\"input-container\">\r\n        <div class=\"label-right\">\r\n            <label for=\"inputName\">Name: </label>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <input id=\"inputName\" type=\"text\" formControlName=\"name\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.name.value\">* (Required)</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"errors\" *ngIf=\"formGroup.controls.name.touched && formGroup.controls.name.errors && formGroup.controls.name.errors.required\">\r\n            Please enter a name.\r\n        </div>\r\n        <div class=\"label-right\">\r\n            <label for=\"inputDate\">Due Date: </label>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <input id=\"inputDate\" type=\"date\" formControlName=\"dueDate\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.dueDate.value\">* (Required)</span>\r\n            </div>\r\n            <div class=\"errors\" *ngIf=\"formGroup.controls.dueDate.touched && formGroup.controls.dueDate.errors && formGroup.controls.dueDate.errors.required\">\r\n                Please enter a valid date.\r\n            </div>\r\n        </div>\r\n        <div class=\"label-right\">\r\n            <label for=\"inputTime\">Due Time: </label>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <input id=\"inputTime\" type=\"time\" formControlName=\"dueTime\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.dueTime.value\">* (Required)</span>\r\n            </div>\r\n            <div class=\"errors\" *ngIf=\"formGroup.controls.dueTime.touched && formGroup.controls.dueTime.errors && formGroup.controls.dueTime.errors.required\">\r\n                Please enter a valid time.\r\n            </div>\r\n        </div>\r\n        <div class=\"label-right\" (click)=\"toggleRecurring()\">\r\n            <label for=\"inputRecurring\">Recurring: </label>\r\n        </div>\r\n        <div>\r\n            <label class=\"switch\">\r\n                <input id=\"inputRecurring\" type=\"checkbox\" formControlName=\"recurring\">\r\n                <span class=\"slider round\"></span>\r\n            </label>\r\n        </div>\r\n        <ng-template [ngIf]=\"formGroup.controls.recurring.value\">\r\n            <div class=\"label-right\">\r\n                <label for=\"recurringFrequency\">Task should repeat: </label>\r\n            </div>\r\n            <div>\r\n                <select class=\"form-control\" id=\"recurringFrequency\" formControlName=\"recurringFrequency\">\r\n                    <option value=\"DAILY\" selected>Daily</option>\r\n                    <option value=\"WEEKLY\">Weekly</option>\r\n                    <option value=\"MONTHLY\">Monthly</option>\r\n                </select>\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.recurringFrequency.value\">* (Required) </span>\r\n            </div>\r\n            <div class=\"label-right\">\r\n                <label for=\"recurringUntil\"> Until: </label>\r\n            </div>\r\n            <div>\r\n                <input id=\"recurringUntil\" type=\"date\" formControlName=\"recurringUntil\">\r\n                <span class=\"red\" *ngIf=\"!formGroup.controls.recurringUntil.value\">* (Required)</span>\r\n                <div class=\"errors\" *ngIf=\"formGroup.errors && formGroup.errors['dateBeforeRecurringUntil']\">\r\n                    {{ formGroup.errors['dateBeforeRecurringUntil'] }}\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <button (click)=\"save()\" [disabled]=\"!formGroup.valid\">Save</button>\r\n</form>","export class Toast {\r\n    type: ToastType;\r\n    text: string;\r\n    uuid: number;\r\n\r\n    constructor(type: ToastType, text: string) {\r\n        this.uuid = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\r\n        this.type = type;\r\n        this.text = text;\r\n    }\r\n}\r\n\r\nexport enum ToastType {\r\n    success = 'SUCCESS',\r\n    error = 'ERROR',\r\n    info = 'INFO'\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-activity-log-sidebar',\r\n  templateUrl: './activity-log-sidebar.component.html',\r\n  styleUrls: ['./activity-log-sidebar.component.scss']\r\n})\r\nexport class ActivityLogSidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>alsw</p>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'newline'\r\n})\r\nexport class NewlinePipe implements PipeTransform {\r\n    transform(value: string): string {\r\n        return value.replace(/\\n/g, '<br/>');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}